# content_finder.py
import requests
import logging
from datetime import datetime
import time
from bs4 import BeautifulSoup
import random

logger = logging.getLogger(__name__)

class ContentFinder:
    def __init__(self):
        self.session = requests.Session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        })

    def search_content(self, max_posts=3):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        logger.info("üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
        
        found_content = []
        
        for _ in range(max_posts):
            content = self.generate_vk_style_post()
            if content:
                found_content.append(content)
        
        logger.info(f"üéØ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {len(found_content)}")
        return found_content

    def generate_vk_style_post(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç –≤ —Å—Ç–∏–ª–µ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –í–ö"""
        templates = [
            {
                "title": "–ü–µ—Ä–≤—ã–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {subject}",
                "emoji": "üèÜ",
                "facts": [
                    "–ì–æ–¥: {year}",
                    "–ú–µ—Å—Ç–æ: {place}",
                    "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: {achievement}",
                    "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: {fun_fact}"
                ]
            },
            {
                "title": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ä—ã–≤: {subject}",
                "emoji": "üí°", 
                "facts": [
                    "–ö–æ–≥–¥–∞: {year}",
                    "–ö—Ç–æ: {who}",
                    "–ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ: {what}",
                    "–ó–Ω–∞—á–µ–Ω–∏–µ: {significance}"
                ]
            },
            {
                "title": "–†–µ–∫–æ—Ä–¥–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {subject}",
                "emoji": "üöÄ",
                "facts": [
                    "–î–∞—Ç–∞: {year}",
                    "–†–µ–∫–æ—Ä–¥: {record}",
                    "–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {previous}",
                    "–ß—Ç–æ —ç—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ: {impact}"
                ]
            }
        ]
        
        subjects = [
            "—Ç–µ–ª–µ—Ñ–æ–Ω", "–∫–æ–º–ø—å—é—Ç–µ—Ä", "—Å–∞–º–æ–ª–µ—Ç", "–∞–≤—Ç–æ–º–æ–±–∏–ª—å", "—Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ", "—Ä–∞–¥–∏–æ",
            "–∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–º—É–∑—ã–∫–∞–ª—å–Ω–∞—è –∑–∞–ø–∏—Å—å",
            "–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –ø–æ–ª–µ—Ç", "–ø–æ–¥–≤–æ–¥–Ω–∞—è –ª–æ–¥–∫–∞", "–º–µ—Ç—Ä–æ", "–ø–æ–µ–∑–¥", "–≤–µ–ª–æ—Å–∏–ø–µ–¥"
        ]
        
        places = ["–°–®–ê", "–†–æ—Å—Å–∏—è", "–ì–µ—Ä–º–∞–Ω–∏—è", "–§—Ä–∞–Ω—Ü–∏—è", "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è", "–ò—Ç–∞–ª–∏—è", "–Ø–ø–æ–Ω–∏—è", "–ö–∏—Ç–∞–π"]
        years = ["1876", "1903", "1927", "1941", "1957", "1969", "1983", "1991", "1998", "2007"]
        
        template = random.choice(templates)
        subject = random.choice(subjects)
        
        title = template["title"].format(subject=subject)
        emoji = template["emoji"]
        
        facts = []
        for fact_template in template["facts"]:
            if "–ì–æ–¥" in fact_template or "–ö–æ–≥–¥–∞" in fact_template or "–î–∞—Ç–∞" in fact_template:
                facts.append(fact_template.format(year=random.choice(years)))
            elif "–ú–µ—Å—Ç–æ" in fact_template:
                facts.append(fact_template.format(place=random.choice(places)))
            elif "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ" in fact_template:
                achievements = [
                    "—Å–æ–∑–¥–∞–Ω–æ –ø–µ—Ä–≤–æ–µ —Ä–∞–±–æ—Ç–∞—é—â–µ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ",
                    "–ø—Ä–æ–≤–µ–¥–µ–Ω –ø–µ—Ä–≤—ã–π —É—Å–ø–µ—à–Ω—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç", 
                    "—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–∏—Ä–æ–≤–æ–π —Ä–µ–∫–æ—Ä–¥",
                    "–ø–æ–ª—É—á–µ–Ω –ø–∞—Ç–µ–Ω—Ç –Ω–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ"
                ]
                facts.append(fact_template.format(achievement=random.choice(achievements)))
            elif "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç" in fact_template:
                fun_facts = [
                    "–∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å –ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –±–æ–ª–µ–µ 10 –ª–µ—Ç",
                    "–ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –Ω–µ –æ—Ü–µ–Ω–∏–ª–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∏–∫–∏",
                    "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π",
                    "–ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ç–æ—Ç–∏–ø —Å—Ç–æ–∏–ª —Ü–µ–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
                ]
                facts.append(fact_template.format(fun_fact=random.choice(fun_facts)))
            elif "–ö—Ç–æ" in fact_template:
                inventors = [
                    "–≥—Ä—É–ø–ø–∞ —É—á–µ–Ω—ã—Ö –∏–∑ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
                    "–æ–¥–∏–Ω —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π –∏–Ω–∂–µ–Ω–µ—Ä-—Å–∞–º–æ—É—á–∫–∞",
                    "–Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç",
                    "—Å—Ç—É–¥–µ–Ω—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞"
                ]
                facts.append(fact_template.format(who=random.choice(inventors)))
            elif "–ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ" in fact_template:
                whats = [
                    "—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–æ–≤–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è",
                    "—Å–æ–∑–¥–∞–Ω –ø—Ä–æ—Ç–æ—Ç–∏–ø, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏–π –∞–Ω–∞–ª–æ–≥–∏",
                    "–¥–æ–∫–∞–∑–∞–Ω–∞ —Ä–∞–Ω–µ–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–æ—Ä–∏—è",
                    "—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–±—Å–æ–ª—é—Ç–Ω—ã–π —Ä–µ–∫–æ—Ä–¥"
                ]
                facts.append(fact_template.format(what=random.choice(whats)))
            elif "–ó–Ω–∞—á–µ–Ω–∏–µ" in fact_template:
                significances = [
                    "—ç—Ç–æ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å –º–∏–ª–ª–∏–æ–Ω–æ–≤ –ª—é–¥–µ–π",
                    "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å—Ç–∞–ª–∞ –æ—Å–Ω–æ–≤–æ–π –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π",
                    "—Ä–µ–∫–æ—Ä–¥ –Ω–µ –ø–æ–±–∏—Ç –¥–æ —Å–∏—Ö –ø–æ—Ä"
                ]
                facts.append(fact_template.format(significance=random.choice(significances)))
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ü–û–õ–ù–´–ô —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ - –ë–ï–ó Markdown —Ä–∞–∑–º–µ—Ç–∫–∏
        full_post_text = f"{emoji} {title}\n\n"
        for fact in facts:
            full_post_text += f"‚Ä¢ {fact}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏
        hashtags = ["#–ø–µ—Ä–≤—ã–π", "#–∏—Å—Ç–æ—Ä–∏—è", "#—Ä–µ–∫–æ—Ä–¥", f"#{subject}"]
        random.shuffle(hashtags)
        full_post_text += f"\n{' '.join(hashtags[:3])}"

        return {
            'title': title,
            'summary': full_post_text,  # –ü–û–õ–ù–´–ô —Ç–µ–∫—Å—Ç
            'category': 'history',
            'url': '',
            'found_date': datetime.now()
        }

    def format_for_preview(self, content):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - –ë–ï–ó Markdown"""
        return f"""
üì∞ –ü–†–ï–î–ü–†–û–°–ú–û–¢–† –ü–û–°–¢–ê

{content['summary']}

‚è∞ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {content['found_date'].strftime('%H:%M %d.%m.%Y')}
        """

def setup_content_finder():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    return ContentFinder()
