# –í —Ñ—É–Ω–∫—Ü–∏–∏ auto_content_scheduler –∑–∞–º–µ–Ω—è–µ–º:
def auto_content_scheduler():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–±–µ–∑ –∞–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏–∏)"""
    logger.info("‚è∞ –ó–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    
    def job():
        try:
            if CONTENT_FINDER_AVAILABLE and bot_running:
                logger.info("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
                finder = setup_content_finder()
                found_content = finder.search_content(max_posts=3)  # 3 –ø–æ—Å—Ç–∞ –≤ –¥–µ–Ω—å
                
                if found_content:
                    for content in found_content:
                        content_id = db.add_found_content(content)
                        
                        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é
                        preview = finder.format_for_preview(content)
                        
                        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
                        markup = telebot.types.InlineKeyboardMarkup()
                        markup.row(
                            telebot.types.InlineKeyboardButton("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"approve_{content_id}"),
                            telebot.types.InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_{content_id}"),
                            telebot.types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{content_id}")
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
                        bot.send_message(
                            ADMIN_ID,
                            preview,
                            reply_markup=markup
                        )
                        time.sleep(2)
                    
                    logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(found_content)} –ø–æ—Å—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é")
                        
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º 2 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å (—É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º)
    while bot_running:
        job()
        time.sleep(43200)  # 12 —á–∞—Å–æ–≤

# –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ callback –º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ approve:
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏"""
    try:
        if call.data.startswith('approve_'):
            content_id = int(call.data.split('_')[1])
            bot.answer_callback_query(call.id, "üì§ –ü—É–±–ª–∏–∫—É—é –ø–æ—Å—Ç...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –±–∞–∑—ã
            conn = db.get_connection()
            cursor = conn.cursor()
            cursor.execute('SELECT content, image_url FROM found_content WHERE id = %s', (content_id,))
            result = cursor.fetchone()
            
            if result:
                full_post_text, image_url = result
                
                # –ü—É–±–ª–∏–∫—É–µ–º –≤ –∫–∞–Ω–∞–ª
                success = publish_approved_post(content_id)
                
                if success:
                    final_text = "‚úÖ –ü–û–°–¢ –û–ü–£–ë–õ–ò–ö–û–í–ê–ù –í –ö–ê–ù–ê–õ–ï! üì¢"
                    # –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π
                    cursor.execute('UPDATE found_content SET is_approved = TRUE WHERE id = %s', (content_id,))
                    conn.commit()
                else:
                    final_text = "‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞"
                
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text=final_text
                )
            
        elif call.data.startswith('reject_'):
            content_id = int(call.data.split('_')[1])
            bot.answer_callback_query(call.id, "‚ùå –ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω")
            
            # –ü—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–π
            conn = db.get_connection()
            cursor = conn.cursor()
            cursor.execute('DELETE FROM found_content WHERE id = %s', (content_id,))
            conn.commit()
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ùå –ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏ —É–¥–∞–ª–µ–Ω"
            )
            
        elif call.data.startswith('edit_'):
            content_id = int(call.data.split('_')[1])
            bot.answer_callback_query(call.id, "‚úèÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç...")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –±–∞–∑—ã
            conn = db.get_connection()
            cursor = conn.cursor()
            cursor.execute('SELECT content FROM found_content WHERE id = %s', (content_id,))
            result = cursor.fetchone()
            
            if result:
                full_post_text = result[0]
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                editing_posts[call.message.chat.id] = content_id
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                edit_message = f"""‚úèÔ∏è –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–ê #{content_id}

–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:
{full_post_text}

üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:"""
                
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
                )
                
                bot.send_message(
                    call.message.chat.id,
                    edit_message
                )
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
